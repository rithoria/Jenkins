node {
   // Mark the code checkout 'stage'....
   stage 'Checkout'

   // Get some code from a GitHub repository
   git url: 'https://github.com/jglick/simple-maven-project-with-tests.git'

   // Get the maven tool.
   // ** NOTE: This 'M3' maven tool must be configured
   // **       in the global configuration.           
   //def mvnHome = tool 'M3'
    def mvnHome = tool("M3")
   // Mark the code build 'stage'....


   stage 'Build'
   // Run the maven build
   sh "${mvnHome}/bin/mvn -Dmaven.test.failure.ignore clean package"
   step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml'])

   //def Artificatory server id
   //def SERVER_ID = "http://centos:8081/artificatory"

   // Get Artifactory server instance, defined in the Artifactory Plugin administration page.
   // def server = Artifactory.newServer('http://localhost:8081/artificatory', 'admin', 'password')

   def server = Artifactory.server('artifactory')

    // Create the uplaod spec.
    def uploadSpec = """{
      "files": [
         {
         "pattern": "simple-maven-project-with-tests-*.jar",
         "target": "libs-release-local/"
         }
      ]
   }"""
   server.upload(uploadSpec)

   // Create the upload spec.
   //def uploadSpec = readFile 'jenkins-pipeline-examples/resources/props-upload.json'

    // Upload to Artifactory.
    def buildInfo = server.upload spec: uploadSpec

    //Create download spec
      def downloadSpec = """{
         "files": [
         {
            "pattern": "simple-maven-project-with-tests-*.jar",
            "target": "libs-release-local/"
         }
      ]    
   }"""

    // Create the download spec.
    //def downloadSpec = readFile 'jenkins-pipeline-examples/resources/props-download.json'

    // Download from Artifactory.
    server.download spec: downloadSpec, buildInfo: buildInfo

    // Publish the build to Artifactory
    server.publishBuildInfo buildInfo


   //BELOW STPES ARE OPTIONAL AND NEEDED ARTIFACTORY PRO

   // stage 'Promotion'
   // def promotionConfig = [
        //Mandatory parameters
   //     'buildName'          : buildInfo.name,
   //     'buildNumber'        : buildInfo.number,
   //     'targetRepo'         : 'libs-release-local',

   //     //Optional parameters
   //     'comment'            : 'this is the promotion comment',
   //     'sourceRepo'         : 'libs-snapshot-local',
   //     'status'             : 'Released',
   //     'includeDependencies': true,
   //     'copy'               : true
   // ]

    // Promote build
    //server.promote promotionConfig
}